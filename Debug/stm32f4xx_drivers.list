
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000580  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000708  08000710  00001710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000708  08000708  00001710  2**0
                  CONTENTS
  4 .ARM          00000000  08000708  08000708  00001710  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000708  08000710  00001710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000708  08000708  00001708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800070c  0800070c  0000170c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001710  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001710  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000890  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000249  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00002220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000072  00000000  00000000  000022c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001b50  00000000  00000000  0000233a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000dd0  00000000  00000000  00003e8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000667a  00000000  00000000  00004c5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000b2d4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  0000b318  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000063  00000000  00000000  0000b4ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080006f0 	.word	0x080006f0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080006f0 	.word	0x080006f0

080001c8 <delay>:


#include "stm32f407xx.h"

void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000/2; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:



int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, gpioBtn;


	gpioBtn.pGPIOx = GPIOB;
 80001fa:	4b1a      	ldr	r3, [pc, #104]	@ (8000264 <main+0x70>)
 80001fc:	603b      	str	r3, [r7, #0]
	gpioBtn.GPIO_PinCongig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	713b      	strb	r3, [r7, #4]
	gpioBtn.GPIO_PinCongig.GPIO_PinMode = GPIO_MODE_IN;
 8000202:	2300      	movs	r3, #0
 8000204:	717b      	strb	r3, [r7, #5]
	gpioBtn.GPIO_PinCongig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	71bb      	strb	r3, [r7, #6]
	gpioBtn.GPIO_PinCongig.GPIO_PinPupdControl = GPIO_PIN_PU;
 800020a:	2301      	movs	r3, #1
 800020c:	71fb      	strb	r3, [r7, #7]


	gpioLed.pGPIOx = GPIOA;
 800020e:	4b16      	ldr	r3, [pc, #88]	@ (8000268 <main+0x74>)
 8000210:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinCongig.GPIO_PinNumber = GPIO_PIN_NO_8;
 8000212:	2308      	movs	r3, #8
 8000214:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinCongig.GPIO_PinMode = GPIO_MODE_OUT;
 8000216:	2301      	movs	r3, #1
 8000218:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinCongig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800021a:	2302      	movs	r3, #2
 800021c:	74bb      	strb	r3, [r7, #18]
	gpioLed.GPIO_PinCongig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021e:	2300      	movs	r3, #0
 8000220:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinCongig.GPIO_PinPupdControl = GPIO_NO_PUPD;
 8000222:	2300      	movs	r3, #0
 8000224:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	480f      	ldr	r0, [pc, #60]	@ (8000268 <main+0x74>)
 800022a:	f000 f929 	bl	8000480 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOB, ENABLE);
 800022e:	2101      	movs	r1, #1
 8000230:	480c      	ldr	r0, [pc, #48]	@ (8000264 <main+0x70>)
 8000232:	f000 f925 	bl	8000480 <GPIO_PeriClockControl>

	GPIO_Init(&gpioLed);
 8000236:	f107 030c 	add.w	r3, r7, #12
 800023a:	4618      	mov	r0, r3
 800023c:	f000 f840 	bl	80002c0 <GPIO_Init>
	GPIO_Init(&gpioBtn);
 8000240:	463b      	mov	r3, r7
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f83c 	bl	80002c0 <GPIO_Init>



	while(1) {
		if (GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == 1) {
 8000248:	210c      	movs	r1, #12
 800024a:	4806      	ldr	r0, [pc, #24]	@ (8000264 <main+0x70>)
 800024c:	f000 fa00 	bl	8000650 <GPIO_ReadFromInputPin>
 8000250:	4603      	mov	r3, r0
 8000252:	2b01      	cmp	r3, #1
 8000254:	d1f8      	bne.n	8000248 <main+0x54>
			delay();
 8000256:	f7ff ffb7 	bl	80001c8 <delay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_8);
 800025a:	2108      	movs	r1, #8
 800025c:	4802      	ldr	r0, [pc, #8]	@ (8000268 <main+0x74>)
 800025e:	f000 fa0d 	bl	800067c <GPIO_ToggleOutputPin>
		if (GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == 1) {
 8000262:	e7f1      	b.n	8000248 <main+0x54>
 8000264:	40020400 	.word	0x40020400
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	@ (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	@ (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	@ (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	@ (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	@ (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	@ (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 fa05 	bl	80006a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa9 	bl	80001f4 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000710 	.word	0x08000710
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_Init>:

#include "stm32f407xx_gpio_driver.h"


void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b087      	sub	sp, #28
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80002c8:	2300      	movs	r3, #0
 80002ca:	617b      	str	r3, [r7, #20]

	//configuring the mode of gpio pin
	if (pGPIOHandle->GPIO_PinCongig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	795b      	ldrb	r3, [r3, #5]
 80002d0:	2b03      	cmp	r3, #3
 80002d2:	d81f      	bhi.n	8000314 <GPIO_Init+0x54>
		temp = pGPIOHandle->GPIO_PinCongig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	795b      	ldrb	r3, [r3, #5]
 80002d8:	461a      	mov	r2, r3
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	791b      	ldrb	r3, [r3, #4]
 80002de:	005b      	lsls	r3, r3, #1
 80002e0:	fa02 f303 	lsl.w	r3, r2, r3
 80002e4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);//clearing
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	681a      	ldr	r2, [r3, #0]
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	791b      	ldrb	r3, [r3, #4]
 80002f0:	4619      	mov	r1, r3
 80002f2:	2303      	movs	r3, #3
 80002f4:	408b      	lsls	r3, r1
 80002f6:	43db      	mvns	r3, r3
 80002f8:	4619      	mov	r1, r3
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	400a      	ands	r2, r1
 8000300:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;//setting
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	6819      	ldr	r1, [r3, #0]
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	697a      	ldr	r2, [r7, #20]
 800030e:	430a      	orrs	r2, r1
 8000310:	601a      	str	r2, [r3, #0]
 8000312:	e012      	b.n	800033a <GPIO_Init+0x7a>
	} else {
		if (pGPIOHandle->GPIO_PinCongig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b04      	cmp	r3, #4
 800031a:	d10b      	bne.n	8000334 <GPIO_Init+0x74>
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);
 800031c:	4b57      	ldr	r3, [pc, #348]	@ (800047c <GPIO_Init+0x1bc>)
 800031e:	68db      	ldr	r3, [r3, #12]
 8000320:	687a      	ldr	r2, [r7, #4]
 8000322:	7912      	ldrb	r2, [r2, #4]
 8000324:	4611      	mov	r1, r2
 8000326:	2201      	movs	r2, #1
 8000328:	408a      	lsls	r2, r1
 800032a:	4611      	mov	r1, r2
 800032c:	4a53      	ldr	r2, [pc, #332]	@ (800047c <GPIO_Init+0x1bc>)
 800032e:	430b      	orrs	r3, r1
 8000330:	60d3      	str	r3, [r2, #12]
 8000332:	e002      	b.n	800033a <GPIO_Init+0x7a>

		} else if (pGPIOHandle->GPIO_PinCongig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b05      	cmp	r3, #5
		} else if (pGPIOHandle->GPIO_PinCongig.GPIO_PinMode == GPIO_MODE_IT_RFT) {

		}
	}

	temp = 0;
 800033a:	2300      	movs	r3, #0
 800033c:	617b      	str	r3, [r7, #20]

	//configuring the speed
	temp = pGPIOHandle->GPIO_PinCongig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	799b      	ldrb	r3, [r3, #6]
 8000342:	461a      	mov	r2, r3
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	005b      	lsls	r3, r3, #1
 800034a:	fa02 f303 	lsl.w	r3, r2, r3
 800034e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);//clearing
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	689a      	ldr	r2, [r3, #8]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	791b      	ldrb	r3, [r3, #4]
 800035a:	4619      	mov	r1, r3
 800035c:	2303      	movs	r3, #3
 800035e:	408b      	lsls	r3, r1
 8000360:	43db      	mvns	r3, r3
 8000362:	4619      	mov	r1, r3
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	400a      	ands	r2, r1
 800036a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	6899      	ldr	r1, [r3, #8]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	697a      	ldr	r2, [r7, #20]
 8000378:	430a      	orrs	r2, r1
 800037a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800037c:	2300      	movs	r3, #0
 800037e:	617b      	str	r3, [r7, #20]

	//configuring the pupd settings
	temp = pGPIOHandle->GPIO_PinCongig.GPIO_PinPupdControl << (2 * pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	79db      	ldrb	r3, [r3, #7]
 8000384:	461a      	mov	r2, r3
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	791b      	ldrb	r3, [r3, #4]
 800038a:	005b      	lsls	r3, r3, #1
 800038c:	fa02 f303 	lsl.w	r3, r2, r3
 8000390:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);//clearing
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	68da      	ldr	r2, [r3, #12]
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	791b      	ldrb	r3, [r3, #4]
 800039c:	4619      	mov	r1, r3
 800039e:	2303      	movs	r3, #3
 80003a0:	408b      	lsls	r3, r1
 80003a2:	43db      	mvns	r3, r3
 80003a4:	4619      	mov	r1, r3
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	400a      	ands	r2, r1
 80003ac:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	68d9      	ldr	r1, [r3, #12]
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	697a      	ldr	r2, [r7, #20]
 80003ba:	430a      	orrs	r2, r1
 80003bc:	60da      	str	r2, [r3, #12]

	temp = 0;
 80003be:	2300      	movs	r3, #0
 80003c0:	617b      	str	r3, [r7, #20]

	//configuring the optype
	temp = pGPIOHandle->GPIO_PinCongig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	7a1b      	ldrb	r3, [r3, #8]
 80003c6:	461a      	mov	r2, r3
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791b      	ldrb	r3, [r3, #4]
 80003cc:	fa02 f303 	lsl.w	r3, r2, r3
 80003d0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber);//clearing
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	685a      	ldr	r2, [r3, #4]
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	791b      	ldrb	r3, [r3, #4]
 80003dc:	4619      	mov	r1, r3
 80003de:	2301      	movs	r3, #1
 80003e0:	408b      	lsls	r3, r1
 80003e2:	43db      	mvns	r3, r3
 80003e4:	4619      	mov	r1, r3
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	400a      	ands	r2, r1
 80003ec:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	6859      	ldr	r1, [r3, #4]
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	697a      	ldr	r2, [r7, #20]
 80003fa:	430a      	orrs	r2, r1
 80003fc:	605a      	str	r2, [r3, #4]

	temp = 0;
 80003fe:	2300      	movs	r3, #0
 8000400:	617b      	str	r3, [r7, #20]

	if (pGPIOHandle->GPIO_PinCongig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	795b      	ldrb	r3, [r3, #5]
 8000406:	2b02      	cmp	r3, #2
 8000408:	d132      	bne.n	8000470 <GPIO_Init+0x1b0>
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber / 8;
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	791b      	ldrb	r3, [r3, #4]
 800040e:	08db      	lsrs	r3, r3, #3
 8000410:	b2db      	uxtb	r3, r3
 8000412:	613b      	str	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinCongig.GPIO_PinNumber % 8;
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	791b      	ldrb	r3, [r3, #4]
 8000418:	f003 0307 	and.w	r3, r3, #7
 800041c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF<< (4 * temp2));//clearing
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	693a      	ldr	r2, [r7, #16]
 8000424:	3208      	adds	r2, #8
 8000426:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800042a:	68fb      	ldr	r3, [r7, #12]
 800042c:	009b      	lsls	r3, r3, #2
 800042e:	210f      	movs	r1, #15
 8000430:	fa01 f303 	lsl.w	r3, r1, r3
 8000434:	43db      	mvns	r3, r3
 8000436:	4619      	mov	r1, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	4011      	ands	r1, r2
 800043e:	693a      	ldr	r2, [r7, #16]
 8000440:	3208      	adds	r2, #8
 8000442:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinCongig.GPIO_PinAltFunMode << (4 * temp2));
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	693a      	ldr	r2, [r7, #16]
 800044c:	3208      	adds	r2, #8
 800044e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	7a5b      	ldrb	r3, [r3, #9]
 8000456:	4619      	mov	r1, r3
 8000458:	68fb      	ldr	r3, [r7, #12]
 800045a:	009b      	lsls	r3, r3, #2
 800045c:	fa01 f303 	lsl.w	r3, r1, r3
 8000460:	4619      	mov	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4311      	orrs	r1, r2
 8000468:	693a      	ldr	r2, [r7, #16]
 800046a:	3208      	adds	r2, #8
 800046c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000470:	bf00      	nop
 8000472:	371c      	adds	r7, #28
 8000474:	46bd      	mov	sp, r7
 8000476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047a:	4770      	bx	lr
 800047c:	40013c00 	.word	0x40013c00

08000480 <GPIO_PeriClockControl>:
		}
}


void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000480:	b480      	push	{r7}
 8000482:	b083      	sub	sp, #12
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
 8000488:	460b      	mov	r3, r1
 800048a:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE) {
 800048c:	78fb      	ldrb	r3, [r7, #3]
 800048e:	2b01      	cmp	r3, #1
 8000490:	d162      	bne.n	8000558 <GPIO_PeriClockControl+0xd8>
		if (pGPIOx == GPIOA) {
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4a64      	ldr	r2, [pc, #400]	@ (8000628 <GPIO_PeriClockControl+0x1a8>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d106      	bne.n	80004a8 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800049a:	4b64      	ldr	r3, [pc, #400]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800049c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800049e:	4a63      	ldr	r2, [pc, #396]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004a0:	f043 0301 	orr.w	r3, r3, #1
 80004a4:	6313      	str	r3, [r2, #48]	@ 0x30
		}
		else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
			}
	}
}
 80004a6:	e0b9      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB) {
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	4a61      	ldr	r2, [pc, #388]	@ (8000630 <GPIO_PeriClockControl+0x1b0>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d106      	bne.n	80004be <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80004b0:	4b5e      	ldr	r3, [pc, #376]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004b4:	4a5d      	ldr	r2, [pc, #372]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004b6:	f043 0302 	orr.w	r3, r3, #2
 80004ba:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004bc:	e0ae      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC) {
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4a5c      	ldr	r2, [pc, #368]	@ (8000634 <GPIO_PeriClockControl+0x1b4>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d106      	bne.n	80004d4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80004c6:	4b59      	ldr	r3, [pc, #356]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004ca:	4a58      	ldr	r2, [pc, #352]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004cc:	f043 0304 	orr.w	r3, r3, #4
 80004d0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004d2:	e0a3      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD) {
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a58      	ldr	r2, [pc, #352]	@ (8000638 <GPIO_PeriClockControl+0x1b8>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d106      	bne.n	80004ea <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80004dc:	4b53      	ldr	r3, [pc, #332]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e0:	4a52      	ldr	r2, [pc, #328]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004e2:	f043 0308 	orr.w	r3, r3, #8
 80004e6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004e8:	e098      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE) {
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4a53      	ldr	r2, [pc, #332]	@ (800063c <GPIO_PeriClockControl+0x1bc>)
 80004ee:	4293      	cmp	r3, r2
 80004f0:	d106      	bne.n	8000500 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80004f2:	4b4e      	ldr	r3, [pc, #312]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f6:	4a4d      	ldr	r2, [pc, #308]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80004f8:	f043 0310 	orr.w	r3, r3, #16
 80004fc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004fe:	e08d      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF) {
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	4a4f      	ldr	r2, [pc, #316]	@ (8000640 <GPIO_PeriClockControl+0x1c0>)
 8000504:	4293      	cmp	r3, r2
 8000506:	d106      	bne.n	8000516 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000508:	4b48      	ldr	r3, [pc, #288]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800050a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800050c:	4a47      	ldr	r2, [pc, #284]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800050e:	f043 0320 	orr.w	r3, r3, #32
 8000512:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000514:	e082      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG) {
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	4a4a      	ldr	r2, [pc, #296]	@ (8000644 <GPIO_PeriClockControl+0x1c4>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d106      	bne.n	800052c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800051e:	4b43      	ldr	r3, [pc, #268]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000520:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000522:	4a42      	ldr	r2, [pc, #264]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000524:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000528:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800052a:	e077      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH) {
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	4a46      	ldr	r2, [pc, #280]	@ (8000648 <GPIO_PeriClockControl+0x1c8>)
 8000530:	4293      	cmp	r3, r2
 8000532:	d106      	bne.n	8000542 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000534:	4b3d      	ldr	r3, [pc, #244]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000536:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000538:	4a3c      	ldr	r2, [pc, #240]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800053a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800053e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000540:	e06c      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI) {
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4a41      	ldr	r2, [pc, #260]	@ (800064c <GPIO_PeriClockControl+0x1cc>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d168      	bne.n	800061c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800054a:	4b38      	ldr	r3, [pc, #224]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800054c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800054e:	4a37      	ldr	r2, [pc, #220]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000550:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000554:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000556:	e061      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	4a33      	ldr	r2, [pc, #204]	@ (8000628 <GPIO_PeriClockControl+0x1a8>)
 800055c:	4293      	cmp	r3, r2
 800055e:	d106      	bne.n	800056e <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000560:	4b32      	ldr	r3, [pc, #200]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000562:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000564:	4a31      	ldr	r2, [pc, #196]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000566:	f023 0301 	bic.w	r3, r3, #1
 800056a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800056c:	e056      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB) {
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	4a2f      	ldr	r2, [pc, #188]	@ (8000630 <GPIO_PeriClockControl+0x1b0>)
 8000572:	4293      	cmp	r3, r2
 8000574:	d106      	bne.n	8000584 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000576:	4b2d      	ldr	r3, [pc, #180]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000578:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800057a:	4a2c      	ldr	r2, [pc, #176]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800057c:	f023 0302 	bic.w	r3, r3, #2
 8000580:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000582:	e04b      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC) {
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	4a2b      	ldr	r2, [pc, #172]	@ (8000634 <GPIO_PeriClockControl+0x1b4>)
 8000588:	4293      	cmp	r3, r2
 800058a:	d106      	bne.n	800059a <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 800058c:	4b27      	ldr	r3, [pc, #156]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 800058e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000590:	4a26      	ldr	r2, [pc, #152]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000592:	f023 0304 	bic.w	r3, r3, #4
 8000596:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000598:	e040      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD) {
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	4a26      	ldr	r2, [pc, #152]	@ (8000638 <GPIO_PeriClockControl+0x1b8>)
 800059e:	4293      	cmp	r3, r2
 80005a0:	d106      	bne.n	80005b0 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80005a2:	4b22      	ldr	r3, [pc, #136]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005a6:	4a21      	ldr	r2, [pc, #132]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005a8:	f023 0308 	bic.w	r3, r3, #8
 80005ac:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005ae:	e035      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE) {
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	4a22      	ldr	r2, [pc, #136]	@ (800063c <GPIO_PeriClockControl+0x1bc>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d106      	bne.n	80005c6 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80005b8:	4b1c      	ldr	r3, [pc, #112]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005bc:	4a1b      	ldr	r2, [pc, #108]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005be:	f023 0310 	bic.w	r3, r3, #16
 80005c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005c4:	e02a      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF) {
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	4a1d      	ldr	r2, [pc, #116]	@ (8000640 <GPIO_PeriClockControl+0x1c0>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d106      	bne.n	80005dc <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80005ce:	4b17      	ldr	r3, [pc, #92]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005d2:	4a16      	ldr	r2, [pc, #88]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005d4:	f023 0320 	bic.w	r3, r3, #32
 80005d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005da:	e01f      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG) {
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	4a19      	ldr	r2, [pc, #100]	@ (8000644 <GPIO_PeriClockControl+0x1c4>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d106      	bne.n	80005f2 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80005e4:	4b11      	ldr	r3, [pc, #68]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005e8:	4a10      	ldr	r2, [pc, #64]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005ea:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80005ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005f0:	e014      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH) {
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	4a14      	ldr	r2, [pc, #80]	@ (8000648 <GPIO_PeriClockControl+0x1c8>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d106      	bne.n	8000608 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 80005fa:	4b0c      	ldr	r3, [pc, #48]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 80005fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fe:	4a0b      	ldr	r2, [pc, #44]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000600:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000604:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000606:	e009      	b.n	800061c <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI) {
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	4a10      	ldr	r2, [pc, #64]	@ (800064c <GPIO_PeriClockControl+0x1cc>)
 800060c:	4293      	cmp	r3, r2
 800060e:	d105      	bne.n	800061c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000610:	4b06      	ldr	r3, [pc, #24]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000612:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000614:	4a05      	ldr	r2, [pc, #20]	@ (800062c <GPIO_PeriClockControl+0x1ac>)
 8000616:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800061a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800061c:	bf00      	nop
 800061e:	370c      	adds	r7, #12
 8000620:	46bd      	mov	sp, r7
 8000622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000626:	4770      	bx	lr
 8000628:	40020000 	.word	0x40020000
 800062c:	40023800 	.word	0x40023800
 8000630:	40020400 	.word	0x40020400
 8000634:	40020800 	.word	0x40020800
 8000638:	40020c00 	.word	0x40020c00
 800063c:	40021000 	.word	0x40021000
 8000640:	40021400 	.word	0x40021400
 8000644:	40021800 	.word	0x40021800
 8000648:	40021c00 	.word	0x40021c00
 800064c:	40022000 	.word	0x40022000

08000650 <GPIO_ReadFromInputPin>:


uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000650:	b480      	push	{r7}
 8000652:	b085      	sub	sp, #20
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	460b      	mov	r3, r1
 800065a:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber)  & 0x00000001);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	691a      	ldr	r2, [r3, #16]
 8000660:	78fb      	ldrb	r3, [r7, #3]
 8000662:	fa22 f303 	lsr.w	r3, r2, r3
 8000666:	b2db      	uxtb	r3, r3
 8000668:	f003 0301 	and.w	r3, r3, #1
 800066c:	73fb      	strb	r3, [r7, #15]
	return value;
 800066e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000670:	4618      	mov	r0, r3
 8000672:	3714      	adds	r7, #20
 8000674:	46bd      	mov	sp, r7
 8000676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800067a:	4770      	bx	lr

0800067c <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800067c:	b480      	push	{r7}
 800067e:	b083      	sub	sp, #12
 8000680:	af00      	add	r7, sp, #0
 8000682:	6078      	str	r0, [r7, #4]
 8000684:	460b      	mov	r3, r1
 8000686:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	695b      	ldr	r3, [r3, #20]
 800068c:	78fa      	ldrb	r2, [r7, #3]
 800068e:	2101      	movs	r1, #1
 8000690:	fa01 f202 	lsl.w	r2, r1, r2
 8000694:	405a      	eors	r2, r3
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	615a      	str	r2, [r3, #20]
}
 800069a:	bf00      	nop
 800069c:	370c      	adds	r7, #12
 800069e:	46bd      	mov	sp, r7
 80006a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a4:	4770      	bx	lr
	...

080006a8 <__libc_init_array>:
 80006a8:	b570      	push	{r4, r5, r6, lr}
 80006aa:	4d0d      	ldr	r5, [pc, #52]	@ (80006e0 <__libc_init_array+0x38>)
 80006ac:	4c0d      	ldr	r4, [pc, #52]	@ (80006e4 <__libc_init_array+0x3c>)
 80006ae:	1b64      	subs	r4, r4, r5
 80006b0:	10a4      	asrs	r4, r4, #2
 80006b2:	2600      	movs	r6, #0
 80006b4:	42a6      	cmp	r6, r4
 80006b6:	d109      	bne.n	80006cc <__libc_init_array+0x24>
 80006b8:	4d0b      	ldr	r5, [pc, #44]	@ (80006e8 <__libc_init_array+0x40>)
 80006ba:	4c0c      	ldr	r4, [pc, #48]	@ (80006ec <__libc_init_array+0x44>)
 80006bc:	f000 f818 	bl	80006f0 <_init>
 80006c0:	1b64      	subs	r4, r4, r5
 80006c2:	10a4      	asrs	r4, r4, #2
 80006c4:	2600      	movs	r6, #0
 80006c6:	42a6      	cmp	r6, r4
 80006c8:	d105      	bne.n	80006d6 <__libc_init_array+0x2e>
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80006d0:	4798      	blx	r3
 80006d2:	3601      	adds	r6, #1
 80006d4:	e7ee      	b.n	80006b4 <__libc_init_array+0xc>
 80006d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80006da:	4798      	blx	r3
 80006dc:	3601      	adds	r6, #1
 80006de:	e7f2      	b.n	80006c6 <__libc_init_array+0x1e>
 80006e0:	08000708 	.word	0x08000708
 80006e4:	08000708 	.word	0x08000708
 80006e8:	08000708 	.word	0x08000708
 80006ec:	0800070c 	.word	0x0800070c

080006f0 <_init>:
 80006f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f2:	bf00      	nop
 80006f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f6:	bc08      	pop	{r3}
 80006f8:	469e      	mov	lr, r3
 80006fa:	4770      	bx	lr

080006fc <_fini>:
 80006fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fe:	bf00      	nop
 8000700:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000702:	bc08      	pop	{r3}
 8000704:	469e      	mov	lr, r3
 8000706:	4770      	bx	lr
